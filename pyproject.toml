[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdfparse"
dynamic = ["version"]
authors = [
    {name = "James G Willmore", email = "willmorejg@gmail.com"},
]
maintainers = [
    {name = "James G Willmore", email = "willmorejg@gmail.com"},
]
description = "A Python package for parsing PDF documents"
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
keywords = ["pdf", "parse", "text", "extraction", "document"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "click>=8.0.0",
    # WeasyPrint backend (recommended for CSS support)
    "weasyprint>=60.0",
    # xhtml2pdf backend (good CSS support, pure Python)
    "xhtml2pdf>=0.2.5",
    # ReportLab backend (basic HTML support)
    "reportlab>=4.0.0",
    # Additional dependencies for handling HTML parsing
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    # Optional: for enhanced CSS support
    "cssselect>=1.2.0",
    "html5lib>=1.1",
]

[project.urls]
Homepage = "https://github.com/willmorejg/pdfparse"
"Bug Tracker" = "https://github.com/willmorejg/pdfparse/issues"
Documentation = "https://pdfparse.readthedocs.io/"
"Source Code" = "https://github.com/willmorejg/pdfparse"
Changelog = "https://github.com/willmorejg/pdfparse/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "setuptools",
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
    "autoflake",
    "build",
    "bumpver",
    "wheel",
    "pdoc",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "pdoc",
]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-mock",
]

[project.scripts]
pdfparse = "pdfparse.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
pdfparse = ["data/*.json", "templates/*.html"]

[tool.setuptools.dynamic]
version = {attr = "pdfparse.__version__"}

# Development tools configuration that work better in pyproject.toml
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pdfparse"]
src_paths = ["src", "tests"]

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
remove-duplicate-keys = true
expand-star-imports = true
exclude = "__init__.py"

[tool.bumpver]
current_version = "0.1.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"src/pdfparse/__init__.py" = [
    "__version__ = '{version}'",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
